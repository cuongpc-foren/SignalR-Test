@page "/"
@using Demo.Models;
@using Microsoft.AspNetCore.SignalR.Client;

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<div>
    SignalR Status : @IsConnected
    Status Update On : @updatedOn
</div>

<h3>Incoming Message</h3>

@foreach (var str in stringList)
{
    <spand>@str</spand>
}
<br />

<h3>Incoming Employee</h3>
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name. (C)</th>
            <th>Address. (F)</th>
            <th>Message. (M)</th>

        </tr>
    </thead>
    <tbody>
        @foreach(var emp in empList)
        {
            <tr>
                <td>@emp.Id</td>
                <td>@emp.Name</td>
                <td>@emp.Address</td>
                <td>@emp.Message</td>

            </tr>
        }
    </tbody>
</table>



@code{
    private HubConnection? hubConnection;
    public List<Employee> empList;
    public List<string> stringList = new List<string>();
    public string updatedOn;

    protected override async Task OnInitializedAsync()
    {
        empList = new List<Employee>();

        hubConnection = new HubConnectionBuilder()
        .WithUrl("http://localhost:5189/signalhub").Build();

        hubConnection.On<Employee>("ReceiveEmployee", (incomingEmployee) => {
            empList.Add(incomingEmployee);
            updatedOn = DateTime.Now.ToLongTimeString();
            StateHasChanged();
        });

        hubConnection.On<string>("ReceiveMessage", (incomingMessage) =>
        {
            stringList.Add(incomingMessage);
            updatedOn = DateTime.Now.ToLongTimeString();
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    public bool IsConnected =>
        hubConnection?.State == HubConnectionState.Connected;
}
